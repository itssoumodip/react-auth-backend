{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\delete\\\\react-auth-backend\\\\frontend\\\\src\\\\components\\\\ForgotPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForgotPassword = props => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  const handleEmailChange = e => {\n    setEmail(e.target.value);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!email) {\n      setMessage('Please enter your email address');\n      return;\n    }\n    setIsLoading(true);\n    setMessage('');\n    try {\n      const response = await fetch(\"http://localhost:3001/forgot-password\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      const result = await response.json();\n      console.log(result, \"passwordReset\");\n      if (result.message === \"update\") {\n        setMessage('Password reset link sent to your email');\n      } else if (result.message === \"user not found\") {\n        setMessage('Error: No account found with that email address');\n      } else {\n        setMessage('Error processing your request. Please try again.');\n      }\n    } catch (error) {\n      setMessage('Error sending reset link. Please try again.');\n      console.error('Reset password error:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const renderMessage = () => {\n    if (!message) return null;\n    const isError = message.includes('Error');\n    const className = `p-3 rounded ${isError ? 'bg-red-100 text-red-700' : 'bg-green-100 text-green-700'}`;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: className,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-3xl font-bold text-gray-900\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), renderMessage(), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"space-y-4\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"text-sm font-medium text-gray-700\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: handleEmailChange,\n          className: \"mt-1 w-full p-3 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500\",\n          placeholder: \"Enter your email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"w-full bg-blue-600 text-white py-3 rounded-lg hover:bg-blue-700 transition duration-200\",\n        disabled: isLoading,\n        children: isLoading ? 'Sending...' : 'Send Reset Link'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onBackToLogin,\n        className: \"w-full text-gray-600 py-3 rounded-lg hover:bg-gray-50 transition duration-200\",\n        children: \"Back to Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n// Alternative: Class Component approach\n/*\r\nclass ForgotPassword extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: '',\r\n      isLoading: false,\r\n      message: ''\r\n    };\r\n  }\r\n\r\n  handleEmailChange = (e) => {\r\n    this.setState({ email: e.target.value });\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!this.state.email) {\r\n      this.setState({ message: 'Please enter your email address' });\r\n      return;\r\n    }\r\n    \r\n    this.setState({ isLoading: true, message: '' });\r\n    \r\n    try {\r\n      // API call would go here\r\n      // Example: await api.sendPasswordResetEmail(this.state.email);\r\n      \r\n      // Simulate API delay\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      this.setState({ message: 'Password reset link sent to your email' });\r\n    } catch (error) {\r\n      this.setState({ message: 'Error sending reset link. Please try again.' });\r\n      console.error('Reset password error:', error);\r\n    } finally {\r\n      this.setState({ isLoading: false });\r\n    }\r\n  };\r\n\r\n  renderMessage() {\r\n    if (!this.state.message) return null;\r\n    \r\n    const isError = this.state.message.includes('Error');\r\n    const className = `p-3 rounded ${isError ? 'bg-red-100 text-red-700' : 'bg-green-100 text-green-700'}`;\r\n    \r\n    return (\r\n      <div className={className}>\r\n        {this.state.message}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"space-y-6\">\r\n        <div className=\"text-center\">\r\n          <h2 className=\"text-3xl font-bold text-gray-900\">Reset Password</h2>\r\n        </div>\r\n        \r\n        {this.renderMessage()}\r\n        \r\n        <form className=\"space-y-4\" onSubmit={this.handleSubmit}>\r\n          <div>\r\n            <label className=\"text-sm font-medium text-gray-700\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              value={this.state.email}\r\n              onChange={this.handleEmailChange}\r\n              className=\"mt-1 w-full p-3 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n              placeholder=\"Enter your email\"\r\n              required\r\n            />\r\n          </div>\r\n          \r\n          <button \r\n            type=\"submit\" \r\n            className=\"w-full bg-blue-600 text-white py-3 rounded-lg hover:bg-blue-700 transition duration-200\"\r\n            disabled={this.state.isLoading}\r\n          >\r\n            {this.state.isLoading ? 'Sending...' : 'Send Reset Link'}\r\n          </button>\r\n          \r\n          <button \r\n            type=\"button\" \r\n            onClick={this.props.onBackToLogin}\r\n            className=\"w-full text-gray-600 py-3 rounded-lg hover:bg-gray-50 transition duration-200\"\r\n          >\r\n            Back to Login\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n*/\n_s(ForgotPassword, \"66eUH+dD7kAKlJRebdKDS3UNVc0=\");\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ForgotPassword","props","_s","email","setEmail","isLoading","setIsLoading","message","setMessage","handleEmailChange","e","target","value","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","result","json","console","log","error","renderMessage","isError","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","required","disabled","onClick","onBackToLogin","_c","$RefreshReg$"],"sources":["D:/Downloads/delete/react-auth-backend/frontend/src/components/ForgotPassword.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst ForgotPassword = (props) => {\r\n  const [email, setEmail] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleEmailChange = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!email) {\r\n      setMessage('Please enter your email address');\r\n      return;\r\n    }\r\n    \r\n    setIsLoading(true);\r\n    setMessage('');\r\n    \r\n    try {\r\n      const response = await fetch(\"http://localhost:3001/forgot-password\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Accept\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ email }),\r\n      });\r\n      \r\n      const result = await response.json();\r\n      console.log(result, \"passwordReset\");\r\n      \r\n      if (result.message === \"update\") {\r\n        setMessage('Password reset link sent to your email');\r\n      } else if (result.message === \"user not found\") {  \r\n        setMessage('Error: No account found with that email address');\r\n      } else {\r\n        setMessage('Error processing your request. Please try again.');\r\n      }\r\n    } catch (error) {\r\n      setMessage('Error sending reset link. Please try again.');\r\n      console.error('Reset password error:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const renderMessage = () => {\r\n    if (!message) return null;\r\n    \r\n    const isError = message.includes('Error');\r\n    const className = `p-3 rounded ${isError ? 'bg-red-100 text-red-700' : 'bg-green-100 text-green-700'}`;\r\n    \r\n    return (\r\n      <div className={className}>\r\n        {message}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"text-center\">\r\n        <h2 className=\"text-3xl font-bold text-gray-900\">Reset Password</h2>\r\n      </div>\r\n      \r\n      {renderMessage()}\r\n      \r\n      <form className=\"space-y-4\" onSubmit={handleSubmit}>\r\n        <div>\r\n          <label className=\"text-sm font-medium text-gray-700\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={handleEmailChange}\r\n            className=\"mt-1 w-full p-3 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n            placeholder=\"Enter your email\"\r\n            required\r\n          />\r\n        </div>\r\n        \r\n        <button \r\n          type=\"submit\" \r\n          className=\"w-full bg-blue-600 text-white py-3 rounded-lg hover:bg-blue-700 transition duration-200\"\r\n          disabled={isLoading}\r\n        >\r\n          {isLoading ? 'Sending...' : 'Send Reset Link'}\r\n        </button>\r\n        \r\n        <button \r\n          type=\"button\" \r\n          onClick={props.onBackToLogin}\r\n          className=\"w-full text-gray-600 py-3 rounded-lg hover:bg-gray-50 transition duration-200\"\r\n        >\r\n          Back to Login\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Alternative: Class Component approach\r\n/*\r\nclass ForgotPassword extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: '',\r\n      isLoading: false,\r\n      message: ''\r\n    };\r\n  }\r\n\r\n  handleEmailChange = (e) => {\r\n    this.setState({ email: e.target.value });\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!this.state.email) {\r\n      this.setState({ message: 'Please enter your email address' });\r\n      return;\r\n    }\r\n    \r\n    this.setState({ isLoading: true, message: '' });\r\n    \r\n    try {\r\n      // API call would go here\r\n      // Example: await api.sendPasswordResetEmail(this.state.email);\r\n      \r\n      // Simulate API delay\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      this.setState({ message: 'Password reset link sent to your email' });\r\n    } catch (error) {\r\n      this.setState({ message: 'Error sending reset link. Please try again.' });\r\n      console.error('Reset password error:', error);\r\n    } finally {\r\n      this.setState({ isLoading: false });\r\n    }\r\n  };\r\n\r\n  renderMessage() {\r\n    if (!this.state.message) return null;\r\n    \r\n    const isError = this.state.message.includes('Error');\r\n    const className = `p-3 rounded ${isError ? 'bg-red-100 text-red-700' : 'bg-green-100 text-green-700'}`;\r\n    \r\n    return (\r\n      <div className={className}>\r\n        {this.state.message}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"space-y-6\">\r\n        <div className=\"text-center\">\r\n          <h2 className=\"text-3xl font-bold text-gray-900\">Reset Password</h2>\r\n        </div>\r\n        \r\n        {this.renderMessage()}\r\n        \r\n        <form className=\"space-y-4\" onSubmit={this.handleSubmit}>\r\n          <div>\r\n            <label className=\"text-sm font-medium text-gray-700\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              value={this.state.email}\r\n              onChange={this.handleEmailChange}\r\n              className=\"mt-1 w-full p-3 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n              placeholder=\"Enter your email\"\r\n              required\r\n            />\r\n          </div>\r\n          \r\n          <button \r\n            type=\"submit\" \r\n            className=\"w-full bg-blue-600 text-white py-3 rounded-lg hover:bg-blue-700 transition duration-200\"\r\n            disabled={this.state.isLoading}\r\n          >\r\n            {this.state.isLoading ? 'Sending...' : 'Send Reset Link'}\r\n          </button>\r\n          \r\n          <button \r\n            type=\"button\" \r\n            onClick={this.props.onBackToLogin}\r\n            className=\"w-full text-gray-600 py-3 rounded-lg hover:bg-gray-50 transition duration-200\"\r\n          >\r\n            Back to Login\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n*/\r\n\r\nexport default ForgotPassword;"],"mappings":"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AAA;QACEsC,IAAI,EAAC,QAAQ;QACbP,SAAS,EAAC,yFAAyF;QACnGW,QAAQ,EAAEpC,SAAU;QAAA0B,QAAA,EAEnB1B,SAAS,GAAG,YAAY,GAAG;MAAiB;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC,CAAC,eAETpC,OAAA;QACEsC,IAAI,EAAC,QAAQ;QACbK,OAAO,EAAEzC,KAAK,CAAC0C,aAAc;QAC7Bb,SAAS,EAAC,+EAA+E;QAAAC,QAAA,EAC1F;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhGAjC,EAAA,CAvGMF,cAAc;AAAA4C,EAAA,GAAd5C,cAAc;AAyMpB,eAAeA,cAAc;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}